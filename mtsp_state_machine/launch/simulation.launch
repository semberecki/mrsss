<launch>

  <arg name="uav_name" default="$(optenv UAV_NAME uav)"/>
  <arg name="standalone" default="false" />

  <arg name="world_file" default="$(find mtsp_state_machine)/config/simulation/world.yaml" />

  <arg unless="$(arg standalone)" name="nodelet" value="load"/>
  <arg     if="$(arg standalone)" name="nodelet" value="standalone"/>
  <arg unless="$(arg standalone)" name="nodelet_manager" value="mtsp_nodelet_manager"/>
  <arg     if="$(arg standalone)" name="nodelet_manager" value=""/>

  <arg name="debug" default="false" />
  <arg unless="$(arg debug)" name="launch_prefix" value=""/>
  <arg     if="$(arg debug)" name="launch_prefix" value="debug_roslaunch"/>

  <arg name="uav1" default="uav1" />
  <arg name="uav2" default="uav2" />

  <group ns="$(arg uav_name)">

    <!-- Nodelet manager -->
    <node pkg="nodelet" type="nodelet" name="$(arg nodelet_manager)" args="manager" output="screen" launch-prefix="$(arg launch_prefix)">
      <param name="num_worker_threads" value="8" />
    </node>

    <node name="mtsp_state_machine" pkg="nodelet" type="nodelet" args="$(arg nodelet) mtsp_state_machine/MtspStateMachine $(arg nodelet_manager)" output="screen">

      <rosparam file="$(find mtsp_state_machine)/config/simulation.yaml" />
      <rosparam file="$(arg world_file)" />

      <!-- Subscribers -->
      <remap from="~mpc_diagnostics_1_in" to="/$(arg uav1)/control_manager/mpc_tracker/diagnostics" />
      <remap from="~mpc_diagnostics_2_in" to="/$(arg uav2)/control_manager/mpc_tracker/diagnostics" />

      <remap from="~trajectory_1_in" to="mtsp_planner/trajectory_1" />
      <remap from="~trajectory_2_in" to="mtsp_planner/trajectory_2" />

      <remap from="~odometry_1_in" to="/$(arg uav1)/odometry/odom_main" />
      <remap from="~odometry_2_in" to="/$(arg uav2)/odometry/odom_main" />

      <remap from="~problem_in" to="mtsp_problem_loader/tsp_problem" />

      <!-- Publishers -->
      <remap from="~visualization_marker_array_out" to="/visualization_marker_array" />

      <!-- Service clients -->
      <remap from="~load_trajectory_out" to="mtsp_problem_loader/start" />

      <remap from="~takeoff_1_out" to="/$(arg uav1)/uav_manager/takeoff" />
      <remap from="~takeoff_2_out" to="/$(arg uav2)/uav_manager/takeoff" />

      <remap from="~land_1_out" to="/$(arg uav1)/uav_manager/land" />
      <remap from="~land_2_out" to="/$(arg uav2)/uav_manager/land" />

      <remap from="~fly_to_start_1_out" to="/$(arg uav1)/control_manager/mpc_tracker/fly_to_trajectory_start" />
      <remap from="~fly_to_start_2_out" to="/$(arg uav2)/control_manager/mpc_tracker/fly_to_trajectory_start" />

      <remap from="~start_following_1_out" to="/$(arg uav1)/control_manager/mpc_tracker/start_trajectory_following" />
      <remap from="~start_following_2_out" to="/$(arg uav2)/control_manager/mpc_tracker/start_trajectory_following" />

      <remap from="~load_trajectory_1_out" to="/$(arg uav1)/control_manager/mpc_tracker/set_trajectory" />
      <remap from="~load_trajectory_2_out" to="/$(arg uav2)/control_manager/mpc_tracker/set_trajectory" />

      <!-- Service servers -->
      <remap from="~start_in" to="~start" />

    </node>

  </group>

</launch>
